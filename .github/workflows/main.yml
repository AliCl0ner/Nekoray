name: Nekoray Build for Windows with Latest Xray-core

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag (e.g., v3.26-xray-25.3.6)"
        required: true

jobs:
  build-go:
    runs-on: ubuntu-latest  # Using Ubuntu for Go build due to cross-compilation
    steps:
      - name: Checking out sources
        uses: actions/checkout@v4

      - name: Install Golang
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24  # Xray-core v25.3.6 requires Go 1.24+

      - name: Download Latest Xray-core Source
        run: |
          mkdir -p xray-core
          curl -L https://github.com/XTLS/Xray-core/archive/refs/tags/v25.3.6.tar.gz | tar xz -C xray-core --strip-components=1
          echo "Using Xray-core v25.3.6"

      - name: Build Xray-core for Windows
        env:
          GOOS: windows
          GOARCH: amd64
        run: |
          cd xray-core
          CGO_ENABLED=0 go build -o xray.exe -trimpath -ldflags "-s -w -buildid=" ./main
          cd ..
          mkdir -p deployment/windows_amd64
          mv xray-core/xray.exe deployment/windows_amd64/xray.exe

      - name: Ensure Go Build Script is Executable
        run: chmod +x ./libs/build_go.sh || echo "build_go.sh not found, skipping"

      - name: Build Nekoray Go Parts
        env:
          GOOS: windows
          GOARCH: amd64
        run: ./libs/build_go.sh

      - name: Tar Go Artifacts
        run: tar czvf go-artifacts.tgz ./deployment

      - name: Upload Go Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NekoRay-${{ github.sha }}-Go-Windows
          path: go-artifacts.tgz

  build-cpp:
    runs-on: windows-2022
    steps:
      - name: Checking out sources
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Install MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
          arch: x64

      - name: Download Custom Qt 6.7 SDK
        shell: bash
        env:
          DL_QT_VER: "6.7"
        run: bash ./libs/download_qtsdk_win.sh

      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Ensure CPP Build Scripts are Executable
        shell: bash
        run: |
          chmod +x ./libs/env_qtsdk.sh || echo "env_qtsdk.sh not found, skipping"
          chmod +x ./libs/deploy_windows64.sh || echo "deploy_windows64.sh not found, skipping"

      - name: Generate Makefile and Build
        shell: bash
        env:
          CC: cl.exe
          CXX: cl.exe
        run: |
          source libs/env_qtsdk.sh $PWD/qtsdk/Qt
          mkdir build
          cd build
          cmake -GNinja -DQT_VERSION_MAJOR=6 -DCMAKE_BUILD_TYPE=Release ..
          ninja -j2
          cd ..
          ./libs/deploy_windows64.sh

      - name: Tar CPP Artifacts
        shell: bash
        run: tar czvf cpp-artifacts.tgz ./deployment

      - name: Upload CPP Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NekoRay-${{ github.sha }}-CPP-Windows
          path: cpp-artifacts.tgz

  publish:
    runs-on: ubuntu-latest
    needs:
      - build-go
      - build-cpp
    steps:
      - name: Checking out sources
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: download-artifact

      - name: Ensure Deploy Script is Executable
        run: chmod +x ./libs/env_deploy.sh || echo "env_deploy.sh not found, skipping"

      - name: Pack for Windows
        run: |
          source libs/env_deploy.sh
          find download-artifact -name "*.tgz" | xargs -n1 tar xvzf -C deployment
          cd deployment
          mv windows_amd64 nekoray  # Combine Go and CPP outputs
          zip -r ${{ github.event.inputs.tag }}-standalone-windows64.zip nekoray
          rm -rf nekoray

      - name: Upload Final Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Nekoray-${{ github.event.inputs.tag }}-Windows
          path: deployment/${{ github.event.inputs.tag }}-standalone-windows64.zip
