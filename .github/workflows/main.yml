build-go:
  strategy:
    matrix:
      cross_os: [windows, linux]
      cross_arch: [amd64]
      include:
        - cross_os: public_res
          cross_arch: public_res
    fail-fast: false
  runs-on: ubuntu-latest
  steps:
    - name: Checking out sources
      uses: actions/checkout@v3

    - name: Go Status
      run: git ls-files go | xargs cat | sha1sum > go_status

    - name: Cache Common Download
      id: cache-common
      uses: actions/cache@v3
      with:
        path: artifacts.tgz
        key: CommonCache-${{ matrix.cross_os }}-${{ matrix.cross_arch }}-${{ hashFiles('libs/*.sh', 'go_status', '*.txt') }}

    - name: Install Golang
      if: steps.cache-common.outputs.cache-hit != 'true'
      uses: actions/setup-go@v3
      with:
        go-version: ^1.24  # Xray-core v25.3.6 requires Go 1.24+

    - name: Download Latest Xray-core Source
      if: steps.cache-common.outputs.cache-hit != 'true'
      run: |
        mkdir -p xray-core
        curl -L https://github.com/XTLS/Xray-core/archive/refs/tags/v25.3.6.tar.gz | tar xz -C xray-core --strip-components=1
        echo "Using Xray-core v25.3.6"

    - name: Build Golang Parts with Xray-core
      if: steps.cache-common.outputs.cache-hit != 'true'
      shell: bash
      env:
        GOOS: ${{ matrix.cross_os }}
        GOARCH: ${{ matrix.cross_arch }}
      run: |
        if [ "${{ matrix.cross_os }}" != "public_res" ]; then
          cp -r xray-core/* .
          CGO_ENABLED=0 go build -o xray -trimpath -ldflags "-s -w -buildid=" ./main
          mkdir -p deployment/${{ matrix.cross_os }}_${{ matrix.cross_arch }}
          mv xray deployment/${{ matrix.cross_os }}_${{ matrix.cross_arch }}/xray
          chmod +x ./libs/build_go.sh
          ./libs/build_go.sh
        else
          chmod +x ./libs/build_public_res.sh
          ./libs/build_public_res.sh
        fi

    - name: Tar Files
      if: steps.cache-common.outputs.cache-hit != 'true'
      run: tar czvf artifacts.tgz ./deployment

    - name: Uploading Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NekoRay-${{ github.sha }}-Common-${{ matrix.cross_os }}-${{ matrix.cross_arch }}
        path: artifacts.tgz
